{"ast":null,"code":"var _jsxFileName = \"/Users/nolanlandefeld/Desktop/github/Dungeons-And-Dragons-Tracker/src/common/components/ResizableDiv.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport * as commStyles from \"../styles/common.module.css\";\nimport * as classnames from \"classnames/bind\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cx = classnames.bind(commonStyles);\nexport const ResizableDiv = ({\n  innerDiv\n}) => {\n  _s();\n\n  const [initialPos, setInitialPos] = React.useState(null);\n  const [initialSize, setInitialSize] = React.useState(null);\n\n  const initial = e => {\n    console.log(e);\n    setInitialPos(e.clientX);\n    setInitialSize(resizable.offsetWidth);\n  };\n\n  const resize = e => {\n    let resizable = document.getElementById(\"Resizable\");\n    resizable.style.width = `${parseInt(initialSize) + parseInt(e.clientX - initialPos)}px`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cx(\"Block\"),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: cx(\"Resizable\"),\n      children: innerDiv\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: cx(\"Draggable\"),\n      draggable: \"true\",\n      onDragStart: e => {\n        initial(e);\n      },\n      onDrag: resize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResizableDiv, \"HlDJounKLJf5+7ZsM9sDJQtIl+k=\");\n\n_c = ResizableDiv;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResizableDiv\");","map":{"version":3,"sources":["/Users/nolanlandefeld/Desktop/github/Dungeons-And-Dragons-Tracker/src/common/components/ResizableDiv.js"],"names":["React","commStyles","classnames","cx","bind","commonStyles","ResizableDiv","innerDiv","initialPos","setInitialPos","useState","initialSize","setInitialSize","initial","e","console","log","clientX","resizable","offsetWidth","resize","document","getElementById","style","width","parseInt"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,UAAZ,MAA4B,6BAA5B;AACA,OAAO,KAAKC,UAAZ,MAA4B,iBAA5B;;AACA,MAAMC,EAAE,GAAGD,UAAU,CAACE,IAAX,CAAgBC,YAAhB,CAAX;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,KAAK,CAACU,QAAN,CAAe,IAAf,CAApC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,KAAK,CAACU,QAAN,CAAe,IAAf,CAAtC;;AAEA,QAAMG,OAAO,GAAIC,CAAD,IAAO;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AAEAL,IAAAA,aAAa,CAACK,CAAC,CAACG,OAAH,CAAb;AACAL,IAAAA,cAAc,CAACM,SAAS,CAACC,WAAX,CAAd;AACD,GALD;;AAOA,QAAMC,MAAM,GAAIN,CAAD,IAAO;AACpB,QAAII,SAAS,GAAGG,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAhB;AAEAJ,IAAAA,SAAS,CAACK,KAAV,CAAgBC,KAAhB,GAAyB,GACvBC,QAAQ,CAACd,WAAD,CAAR,GAAwBc,QAAQ,CAACX,CAAC,CAACG,OAAF,GAAYT,UAAb,CACjC,IAFD;AAGD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAEL,EAAE,CAAC,OAAD,CAAlB;AAAA,4BACE;AAAK,MAAA,EAAE,EAAEA,EAAE,CAAC,WAAD,CAAX;AAAA,gBAA2BI;AAA3B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,EAAE,EAAEJ,EAAE,CAAC,WAAD,CADR;AAEE,MAAA,SAAS,EAAC,MAFZ;AAGE,MAAA,WAAW,EAAGW,CAAD,IAAK;AAACD,QAAAA,OAAO,CAACC,CAAD,CAAP;AAAW,OAHhC;AAIE,MAAA,MAAM,EAAEM;AAJV;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA9BM;;GAAMd,Y;;KAAAA,Y","sourcesContent":["import * as React from \"react\";\nimport * as commStyles from \"../styles/common.module.css\";\nimport * as classnames from \"classnames/bind\";\nconst cx = classnames.bind(commonStyles);\n\nexport const ResizableDiv = ({ innerDiv }) => {\n  const [initialPos, setInitialPos] = React.useState(null);\n  const [initialSize, setInitialSize] = React.useState(null);\n\n  const initial = (e) => {\n    console.log(e)\n\n    setInitialPos(e.clientX);\n    setInitialSize(resizable.offsetWidth);\n  };\n\n  const resize = (e) => {\n    let resizable = document.getElementById(\"Resizable\");\n\n    resizable.style.width = `${\n      parseInt(initialSize) + parseInt(e.clientX - initialPos)\n    }px`;\n  };\n\n  return (\n    <div className={cx(\"Block\")}>\n      <div id={cx(\"Resizable\")}>{innerDiv}</div>\n      <div\n        id={cx(\"Draggable\")}\n        draggable=\"true\"\n        onDragStart={(e)=>{initial(e)}}\n        onDrag={resize}\n      />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}