{"ast":null,"code":"var _jsxFileName = \"/Users/nolanlandefeld/Desktop/github/Dungeons-And-Dragons-Tracker/src/common/components/dropDownMenu/DropMenu.tsx\",\n    _s = $RefreshSig$();\n\n// import 'bootstrap/dist/css/bootstrap.css';\nimport * as React from \"react\";\nimport styles from \"./DropMenu.module.css\";\nimport classnames from \"classnames/bind\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cx = classnames.bind(styles);\nexport const DropMenu = ({\n  options,\n  title,\n  onItemSelect\n}) => {\n  _s();\n\n  const [showMenu, setShowMenu] = React.useState(false);\n  const [menuDirection, setMenuDirection] = React.useState('right');\n  React.useEffect(() => {\n    if (showMenu) {\n      setMenuDirection('down');\n    } else {\n      setMenuDirection('right');\n    }\n  }, [showMenu]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cx('select-box'),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx('select-box-toggle'),\n      onClick: () => {\n        setShowMenu(!showMenu);\n      },\n      children: [title, \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: cx(\"arrow\", `${menuDirection}`)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), showMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx('drop-menu'),\n      children: options.map(opt => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cx('drop-menu-item'),\n          onClick: () => {\n            onItemSelect(opt);\n            setShowMenu(false);\n          },\n          children: opt.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 33\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 11\n  }, this);\n};\n\n_s(DropMenu, \"F/9jaaxYbo2lhgLzfzgVepjt1KA=\");\n\n_c = DropMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropMenu\");","map":{"version":3,"sources":["/Users/nolanlandefeld/Desktop/github/Dungeons-And-Dragons-Tracker/src/common/components/dropDownMenu/DropMenu.tsx"],"names":["React","styles","classnames","cx","bind","DropMenu","options","title","onItemSelect","showMenu","setShowMenu","useState","menuDirection","setMenuDirection","useEffect","map","opt","label"],"mappings":";;;AAAA;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;;AACA,MAAMC,EAAE,GAAGD,UAAU,CAACE,IAAX,CAAgBH,MAAhB,CAAX;AAQA,OAAO,MAAMI,QAAiC,GAAG,CAAC;AAChDC,EAAAA,OADgD;AAEhDC,EAAAA,KAFgD;AAGhDC,EAAAA;AAHgD,CAAD,KAI3C;AAAA;;AACJ,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,KAAK,CAACW,QAAN,CAAe,KAAf,CAAhC;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCb,KAAK,CAACW,QAAN,CAAe,OAAf,CAA1C;AAEAX,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAI;AAClB,QAAGL,QAAH,EAAY;AACVI,MAAAA,gBAAgB,CAAC,MAAD,CAAhB;AACD,KAFD,MAEO;AACLA,MAAAA,gBAAgB,CAAC,OAAD,CAAhB;AACD;AACF,GAND,EAME,CAACJ,QAAD,CANF;AAQA,sBAAQ;AAAK,IAAA,SAAS,EAAEN,EAAE,CAAC,YAAD,CAAlB;AAAA,4BACN;AAAK,MAAA,SAAS,EAAEA,EAAE,CAAC,mBAAD,CAAlB;AACA,MAAA,OAAO,EAAE,MAAI;AAACO,QAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AAAuB,OADrC;AAAA,iBAEGF,KAFH,oBAEU;AAAA,+BAAG;AAAG,UAAA,SAAS,EAAEJ,EAAE,CAAC,OAAD,EAAW,GAAES,aAAc,EAA3B;AAAhB;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,cAFV;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,EAKLH,QAAQ,iBACT;AAAK,MAAA,SAAS,EAAEN,EAAE,CAAC,WAAD,CAAlB;AAAA,gBACGG,OAAO,CAACS,GAAR,CAAYC,GAAG,IAAE;AAAC,4BAAO;AAAK,UAAA,SAAS,EAAEb,EAAE,CAAC,gBAAD,CAAlB;AAAsC,UAAA,OAAO,EAAE,MAAI;AAACK,YAAAA,YAAY,CAACQ,GAAD,CAAZ;AAAmBN,YAAAA,WAAW,CAAC,KAAD,CAAX;AAAmB,WAA1F;AAAA,oBAA6FM,GAAG,CAACC;AAAjG;AAAA;AAAA;AAAA;AAAA,gBAAP;AAAqH,OAAvI;AADH;AAAA;AAAA;AAAA;AAAA,YANM;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAYD,CA5BM;;GAAMZ,Q;;KAAAA,Q","sourcesContent":["// import 'bootstrap/dist/css/bootstrap.css';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport * as React from \"react\";\nimport styles from \"./DropMenu.module.css\";\nimport classnames from \"classnames/bind\";\nconst cx = classnames.bind(styles);\n\ninterface DropMenuProps {\n  options: { label: string; value: string }[];\n  title: string;\n  onItemSelect: ({}) => void;\n}\n\nexport const DropMenu: React.FC<DropMenuProps> = ({\n  options,\n  title, \n  onItemSelect\n}) => {\n  const [showMenu, setShowMenu] = React.useState(false)\n  const [menuDirection, setMenuDirection] = React.useState('right')\n\n  React.useEffect(()=>{\n    if(showMenu){\n      setMenuDirection('down')\n    } else {\n      setMenuDirection('right')\n    }\n  },[showMenu])\n  \n  return (<div className={cx('select-box')}>\n    <div className={cx('select-box-toggle')}\n    onClick={()=>{setShowMenu(!showMenu)}}>\n      {title} <p><i className={cx(\"arrow\", `${menuDirection}`)}></i></p>\n    </div>\n    {showMenu &&\n    <div className={cx('drop-menu')}>\n      {options.map(opt=>{return <div className={cx('drop-menu-item')} onClick={()=>{onItemSelect(opt); setShowMenu(false)}}>{opt.label}</div>})}\n    </div>\n    }\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}