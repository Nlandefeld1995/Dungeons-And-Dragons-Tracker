{"ast":null,"code":"var _jsxFileName = \"/Users/nolanlandefeld/Desktop/github/Dungeons-And-Dragons-Tracker/src/common/components/dropDownMenu/SelectBox.tsx\",\n    _s = $RefreshSig$();\n\n// import 'bootstrap/dist/css/bootstrap.css';\nimport * as React from \"react\";\nimport styles from \"./selectBox.module.css\";\nimport classnames from \"classnames/bind\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cx = classnames.bind(styles);\nexport const SelectBox = ({\n  options,\n  title,\n  onItemSelect\n}) => {\n  _s();\n\n  const [selectedItem, setSelectedItem] = React.useState({});\n  const [showMenu, setShowMenu] = React.useState(false);\n  React.useState(() => {\n    onItemSelect(selectedItem);\n  }, [selectedItem]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cx('select-box'),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx('select-box-toggle'),\n      onClick: () => {\n        setShowMenu(!showMenu);\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), showMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx('drop-menu'),\n      children: options.map(opt => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cx('drop-menu-item'),\n          onClick: () => {\n            setSelectedItem(opt);\n          },\n          children: opt.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 33\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 11\n  }, this);\n};\n\n_s(SelectBox, \"Yrt47wut3L9lB5YEE9WgjYE62z4=\");\n\n_c = SelectBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectBox\");","map":{"version":3,"sources":["/Users/nolanlandefeld/Desktop/github/Dungeons-And-Dragons-Tracker/src/common/components/dropDownMenu/SelectBox.tsx"],"names":["React","styles","classnames","cx","bind","SelectBox","options","title","onItemSelect","selectedItem","setSelectedItem","useState","showMenu","setShowMenu","map","opt","label"],"mappings":";;;AAAA;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;;AACA,MAAMC,EAAE,GAAGD,UAAU,CAACE,IAAX,CAAgBH,MAAhB,CAAX;AAQA,OAAO,MAAMI,SAAmC,GAAG,CAAC;AAClDC,EAAAA,OADkD;AAElDC,EAAAA,KAFkD;AAGlDC,EAAAA;AAHkD,CAAD,KAI7C;AAAA;;AACJ,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,KAAK,CAACW,QAAN,CAAe,EAAf,CAAxC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,KAAK,CAACW,QAAN,CAAe,KAAf,CAAhC;AAEAX,EAAAA,KAAK,CAACW,QAAN,CAAe,MAAI;AACjBH,IAAAA,YAAY,CAACC,YAAD,CAAZ;AACD,GAFD,EAEE,CAACA,YAAD,CAFF;AAIA,sBAAQ;AAAK,IAAA,SAAS,EAAEN,EAAE,CAAC,YAAD,CAAlB;AAAA,4BACN;AAAK,MAAA,SAAS,EAAEA,EAAE,CAAC,mBAAD,CAAlB;AACA,MAAA,OAAO,EAAE,MAAI;AAACU,QAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AAAuB,OADrC;AAAA,gBAEGL;AAFH;AAAA;AAAA;AAAA;AAAA,YADM,EAKLK,QAAQ,iBACT;AAAK,MAAA,SAAS,EAAET,EAAE,CAAC,WAAD,CAAlB;AAAA,gBACGG,OAAO,CAACQ,GAAR,CAAYC,GAAG,IAAE;AAAC,4BAAO;AAAK,UAAA,SAAS,EAAEZ,EAAE,CAAC,gBAAD,CAAlB;AAAsC,UAAA,OAAO,EAAE,MAAI;AAACO,YAAAA,eAAe,CAACK,GAAD,CAAf;AAAqB,WAAzE;AAAA,oBAA4EA,GAAG,CAACC;AAAhF;AAAA;AAAA;AAAA;AAAA,gBAAP;AAAoG,OAAtH;AADH;AAAA;AAAA;AAAA;AAAA,YANM;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAYD,CAxBM;;GAAMX,S;;KAAAA,S","sourcesContent":["// import 'bootstrap/dist/css/bootstrap.css';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport * as React from \"react\";\nimport styles from \"./selectBox.module.css\";\nimport classnames from \"classnames/bind\";\nconst cx = classnames.bind(styles);\n\ninterface SelectBoxProps {\n  options: { label: string; value: string }[];\n  title: string;\n  onItemSelect: ({}) => void;\n}\n\nexport const SelectBox: React.FC<SelectBoxProps> = ({\n  options,\n  title, \n  onItemSelect\n}) => {\n  const [selectedItem, setSelectedItem] = React.useState({})\n  const [showMenu, setShowMenu] = React.useState(false)\n\n  React.useState(()=>{\n    onItemSelect(selectedItem)\n  },[selectedItem])\n  \n  return (<div className={cx('select-box')}>\n    <div className={cx('select-box-toggle')}\n    onClick={()=>{setShowMenu(!showMenu)}}>\n      {title}\n    </div>\n    {showMenu &&\n    <div className={cx('drop-menu')}>\n      {options.map(opt=>{return <div className={cx('drop-menu-item')} onClick={()=>{setSelectedItem(opt)}}>{opt.label}</div>})}\n    </div>\n    }\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}